-- Adminer 4.7.1 MySQL dump

SET NAMES utf8;
SET time_zone = '+00:00';
SET foreign_key_checks = 0;
SET sql_mode = 'NO_AUTO_VALUE_ON_ZERO';

DROP TABLE IF EXISTS `tbComputerInventory`;
CREATE TABLE `tbComputerInventory` (
  `id` int(5) NOT NULL AUTO_INCREMENT,
  `ComputerTargetId` varchar(255) NOT NULL,
  `ClassID` int(5) NOT NULL,
  `PropertyID` int(5) NOT NULL,
  `Value` varchar(256) NOT NULL,
  `InstanceId` int(5) NOT NULL DEFAULT '1',
  PRIMARY KEY (`id`),
  KEY `ClassID` (`ClassID`),
  KEY `PropertyID` (`PropertyID`),
  KEY `ComputerTargetId` (`ComputerTargetId`),
  CONSTRAINT `tbComputerInventory_ibfk_2` FOREIGN KEY (`PropertyID`) REFERENCES `tbInventoryProperty` (`PropertyID`),
  CONSTRAINT `tbComputerInventory_ibfk_3` FOREIGN KEY (`ClassID`) REFERENCES `tbInventoryClass` (`ClassID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;


DROP TABLE IF EXISTS `tbComputerSoftInventory`;
CREATE TABLE `tbComputerSoftInventory` (
  `id` int(5) NOT NULL AUTO_INCREMENT,
  `ComputerTargetId` varchar(255) NOT NULL,
  `PropertyID` int(5) NOT NULL,
  `Value` varchar(256) NOT NULL,
  `InstanceId` int(5) NOT NULL,
  `SnapshotId` int(5) DEFAULT NULL,
  `SnapshotDate` datetime DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `ComputerTargetId` (`ComputerTargetId`),
  KEY `PropertyID` (`PropertyID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;


DROP TABLE IF EXISTS `tbComputerTarget`;
CREATE TABLE `tbComputerTarget` (
  `id` int(5) NOT NULL AUTO_INCREMENT,
  `ComputerTargetId` varchar(255) NOT NULL,
  `Name` varchar(256) NOT NULL,
  `LastReportedInventoryTime` datetime DEFAULT NULL,
  `LastReportedSoftInventoryTime` datetime DEFAULT NULL,
  `LastReportedUpdatesInventoryTime` datetime DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `ComputerTargetId` (`ComputerTargetId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;


DROP TABLE IF EXISTS `tbComputerUpdatesInventory`;
CREATE TABLE `tbComputerUpdatesInventory` (
  `id` int(5) NOT NULL AUTO_INCREMENT,
  `ComputerTargetId` varchar(255) NOT NULL,
  `PropertyID` int(5) NOT NULL,
  `Value` varchar(256) NOT NULL,
  `InstanceId` int(5) NOT NULL,
  `SnapshotId` int(5) DEFAULT NULL,
  `SnapshotDate` datetime DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `ComputerTargetId` (`ComputerTargetId`),
  KEY `PropertyID` (`PropertyID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;


DROP TABLE IF EXISTS `tbInventoryClass`;
CREATE TABLE `tbInventoryClass` (
  `ClassID` int(5) NOT NULL,
  `Name` varchar(256) NOT NULL,
  `Namespace` varchar(256) NOT NULL DEFAULT 'root\\cimv2',
  `Title` varchar(256) NOT NULL,
  `Description` longtext NOT NULL,
  `Icon` varchar(256) NOT NULL,
  `Enabled` int(1) NOT NULL DEFAULT '1',
  PRIMARY KEY (`ClassID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

INSERT INTO `tbInventoryClass` (`ClassID`, `Name`, `Namespace`, `Title`, `Description`, `Icon`, `Enabled`) VALUES
(1,	'Win32_BIOS',	'root\\cimv2',	'BIOS',	'The Win32_BIOS WMI class represents the attributes of the computer systems basic input/output services (BIOS) that are installed on a computer.',	'bios.ico',	1),
(2,	'Win32_ComputerSystem',	'root\\cimv2',	'Computer',	'The Win32_ComputerSystem WMI class represents a computer system running Windows.',	'computer.ico',	1),
(3,	'Win32_DesktopMonitor',	'root\\cimv2',	'Monitors',	'The Win32_DesktopMonitor WMI class represents the type of monitor or display device attached to the computer system.\r\n\r\nHardware that is not compatible with Windows Display Driver Model (WDDM) returns inaccurate property values for instances of this class.',	'monitor.ico',	1),
(4,	'Win32_DiskDrive',	'root\\cimv2',	'Disk drives',	'The Win32_DiskDrive WMI class represents a physical disk drive as seen by a computer running the Windows operating system.',	'disk.ico',	1),
(5,	'Win32_LogicalDisk',	'root\\cimv2',	'Logical disks',	'The Win32_LogicalDisk WMI class represents a data source that resolves to an actual local storage device on a computer system running Windows.',	'disk.ico',	1),
(6,	'Win32_NetworkAdapter',	'root\\cimv2',	'Network adapters',	'The Win32_NetworkAdapter class is deprecated. Use the MSFT_NetAdapter class instead. The Win32_NetworkAdapterWMI class represents a network adapter of a computer running a Windows operating system.',	'network.ico',	2),
(7,	'Win32_NetworkAdapterConfiguration',	'root\\cimv2',	'Network adapters configuration',	'The Win32_NetworkAdapterConfiguration WMI classrepresents the attributes and behaviors of a network adapter. This class includes extra properties and methods that support the management of the TCP/IP protocol that are independent from the network adapter.',	'network.ico',	2),
(8,	'Win32_OperatingSystem',	'root\\cimv2',	'Operating system',	'The Win32_OperatingSystem WMI class represents a Windows-based operating system installed on a computer.',	'windows.ico',	1),
(10,	'Win32_Printer',	'root\\cimv2',	'Printers',	'The Win32_Printer WMI class represents a device connected to a computer running on a Microsoft Windows operating system that can produce a printed image or text on paper or other medium.',	'printer.ico',	1),
(11,	'Win32_Processor',	'root\\cimv2',	'Processors',	'The Win32_Processor WMI class represents a device that can interpret a sequence of instructions on a computer running on a Windows operating system.',	'cpu.ico',	1),
(12,	'Win32_SoundDevice',	'root\\cimv2',	'Audio inputs and outputs',	'The Win32_SoundDevice WMI class represents the properties of a sound device on a computer system running Windows.',	'audio.ico',	1),
(13,	'Win32_VideoController',	'root\\cimv2',	'Display adapters',	'The Win32_VideoController WMI class represents the capabilities and management capacity of the video controller on a computer system running Windows.\r\n\r\nHardware that is not compatible with Windows Display Driver Model (WDDM) returns inaccurate property values for instances of this class.',	'video.ico',	1),
(15,	'Win32_PhysicalMemory',	'root\\cimv2',	'Memory devices',	'The Win32_PhysicalMemory WMI class represents a physical memory device located on a computer system and available to the operating system.',	'ram.ico',	1),
(16,	'Win32_BaseBoard',	'root\\cimv2',	'Base board',	'The Win32_BaseBoard WMI class represents a baseboard, which is also known as a motherboard or system board.',	'system.ico',	1),
(17,	'Win32_IDEController',	'root\\cimv2',	'IDE ATA/ATAPI controllers',	'The Win32_IDEController WMI class manages the capabilities of an integrated device electronics (IDE) controller device.',	'ide-controller.ico',	1),
(18,	'Win32_SCSIController',	'root\\cimv2',	'Storage controllers',	'The Win32_SCSIController WMI class represents a SCSI controller on a computer system running Windows.',	'scsi-controller.ico',	1),
(19,	'Win32_USBController',	'root\\cimv2',	'USB controllers',	'The Win32_USBController WMI class manages the capabilities of a universal serial bus (USB) controller.',	'usb-controller.ico',	1),
(20,	'Win32_USBHub',	'root\\cimv2',	'USB devices',	'The Win32_USBHub WMI class represents the management characteristics of a universal serial bus (USB) hub.',	'usb.ico',	1),
(21,	'Win32_PointingDevice',	'root\\cimv2',	'Mice and other pointing devices',	'The Win32_PointingDevice WMI class represents an input device used to point to and select regions on the display of a computer system running Windows. Any device used to manipulate a pointer, or point to the display on a computer system running Windows is a member of this class.',	'mouse.ico',	1),
(22,	'Win32_Keyboard',	'root\\cimv2',	'Keyboards',	'The Win32_Keyboard WMI class represents a keyboard installed on a computer system running Windows.',	'keyboard.ico',	1),
(23,	'Win32_SerialPort',	'root\\cimv2',	'Serial ports',	'The Win32_SerialPort WMI class represents a serial port on a computer system running Windows.',	'com.ico',	1),
(24,	'Win32_ParallelPort',	'root\\cimv2',	'Parallel ports',	'The Win32_ParallelPort WMI class represents the properties of a parallel port on a computer system running Windows.',	'lpt.ico',	1),
(25,	'Win32_ComputerSystemProduct',	'root\\cimv2',	'Computer system product',	'The Win32_ComputerSystemProduct WMI class represents a product. This includes software and hardware used on this computer system.',	'non-pnp.ico',	1),
(26,	'Win32_DiskDriveToDiskPartition',	'root\\cimv2',	'Disk drives to disk partitions',	'The Win32_DiskDriveToDiskPartition association WMI class relates a disk drive and a partition existing on it.',	'non-pnp.ico',	1),
(27,	'Win32_LogicalDiskToPartition',	'root\\cimv2',	'Logical disks to partitions',	'The Win32_LogicalDiskToPartition association WMI class relates a logical disk drive and the disk partition it resides on.',	'non-pnp.ico',	1),
(28,	'Win32_PhysicalMemoryArray',	'root\\cimv2',	'Memory arrays',	'The Win32_PhysicalMemoryArray WMI class represents details about the computer system physical memory. This includes the number of memory devices, memory capacity available, and memory typeâ€”for example, system or video memory.',	'ram.ico',	1),
(29,	'Win32_PortableBattery',	'root\\cimv2',	'Portable battery',	'The Win32_PortableBattery WMI class contains the properties related to a portable battery, such as a notebook computer battery.',	'battery.ico',	1),
(30,	'Win32_Battery',	'root\\cimv2',	'Battery',	'The Win32_Battery WMI class represents a battery connected to the computer system.',	'battery.ico',	1),
(80,	'Win32_UserAccount',	'root\\cimv2',	'User accounts',	'The Win32_UserAccount WMI class contains information about a user account on a computer system running Windows.\r\n\r\nBecause both the Name and Domain are key properties, enumerating Win32_UserAccount on a large network can negatively affect performance. Calling GetObject or querying for a specific instance has less impact.',	'user.ico',	3),
(81,	'Win32_GroupUser',	'root\\cimv2',	'Group users',	'The Win32_GroupUser association WMI class relates a group and an account that is a member of that group.',	'user.ico',	0),
(90,	'Win32_Product',	'root\\cimv2',	'Software',	'The Win32_Product WMI class represents products as they are installed by Windows Installer. A product generally correlates to one installation package.\r\n\r\nFor more information about support or requirements for installation of a specific operating system, see Operating System Availability of WMI Components.',	'non-pnp.ico',	0),
(91,	'SoftwareLicensingProduct',	'root\\cimv2',	'Software license',	'This class exposes the product-specific properties and methods of the Software Licensing service.',	'non-pnp.ico',	0),
(92,	'MSStorageDriver_FailurePredictStatus',	'root\\wmi',	'Storage driver failure predict status',	'Articles:\r\nhttps://learn-powershell.net/2011/08/20/checking-for-failing-hard-drives-using-s-m-a-r-t-and-powershell/\r\n\r\nhttps://isazonov.wordpress.com/2016/05/24/sccm-check-disk-health/',	'non-pnp.ico',	1),
(93,	'Win32_QuickFixEngineering',	'root\\cimv2',	'Windows updates',	'The Win32_QuickFixEngineeringâ€‚WMI class represents a small system-wide update, commonly referred to as a quick-fix engineering (QFE) update, applied to the current operating system.',	'non-pnp.ico',	0),
(94,	'Win32_PNPEntity',	'root\\cimv2',	'Problem devices',	'The Win32_PnPEntity WMI class represents the properties of a Plug and Play device. Plug and Play entities are shown as entries in the Device Manager located in Control Panel.',	'other.ico',	0);

DROP TABLE IF EXISTS `tbInventoryProperty`;
CREATE TABLE `tbInventoryProperty` (
  `PropertyID` int(5) NOT NULL,
  `ClassID` int(5) NOT NULL,
  `Name` varchar(256) NOT NULL,
  `Type` varchar(10) NOT NULL,
  `Description` longtext NOT NULL,
  PRIMARY KEY (`PropertyID`),
  KEY `ClassID` (`ClassID`),
  CONSTRAINT `tbInventoryProperty_ibfk_1` FOREIGN KEY (`ClassID`) REFERENCES `tbInventoryClass` (`ClassID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

INSERT INTO `tbInventoryProperty` (`PropertyID`, `ClassID`, `Name`, `Type`, `Description`) VALUES
(1,	11,	'DeviceID',	'String',	''),
(2,	11,	'Architecture',	'UInt16',	''),
(3,	11,	'MaxClockSpeed',	'UInt32',	''),
(4,	11,	'Name',	'String',	''),
(5,	1,	'Name',	'String',	''),
(6,	1,	'Version',	'String',	''),
(7,	1,	'Manufacturer',	'String',	''),
(8,	1,	'ReleaseDate',	'DateTime',	''),
(13,	8,	'Name',	'String',	''),
(14,	8,	'BuildNumber',	'String',	''),
(15,	8,	'Caption',	'String',	''),
(16,	8,	'OSProductSuite',	'UInt32',	''),
(17,	8,	'OSLanguage',	'UInt32',	''),
(18,	8,	'OtherTypeDescription',	'String',	''),
(19,	8,	'ProductType',	'UInt32',	''),
(20,	8,	'SerialNumber',	'String',	''),
(21,	8,	'ServicePackMajorVersion',	'UInt16',	''),
(22,	8,	'ServicePackMinorVersion',	'UInt16',	''),
(23,	8,	'Version',	'String',	''),
(24,	4,	'DeviceID',	'String',	''),
(25,	4,	'Name',	'String',	''),
(26,	4,	'Caption',	'String',	''),
(27,	4,	'Manufacturer',	'String',	''),
(28,	4,	'Model',	'String',	''),
(29,	4,	'InterfaceType',	'String',	''),
(30,	4,	'Partitions',	'UInt32',	''),
(31,	4,	'Size',	'UInt64',	''),
(32,	5,	'DeviceID',	'String',	''),
(33,	5,	'Name',	'String',	''),
(34,	5,	'DriveType',	'UInt32',	''),
(35,	5,	'VolumeName',	'String',	''),
(36,	5,	'FileSystem',	'String',	''),
(37,	5,	'Size',	'UInt64',	''),
(38,	5,	'FreeSpace',	'UInt64',	''),
(39,	7,	'Index',	'UInt32',	''),
(40,	7,	'Caption',	'String',	''),
(41,	7,	'Description',	'String',	''),
(42,	7,	'DHCPEnabled',	'Boolean',	''),
(43,	7,	'DHCPLeaseExpires',	'DateTime',	''),
(44,	7,	'DHCPLeaseObtained',	'DateTime',	''),
(45,	7,	'DHCPServer',	'String',	''),
(46,	7,	'DNSDomain',	'String',	''),
(47,	7,	'DNSEnabledForWINSResolution',	'Boolean',	''),
(48,	7,	'DNSHostName',	'String',	''),
(49,	7,	'DomainDNSRegistrationEnabled',	'Boolean',	''),
(50,	7,	'IPAddress',	'String',	''),
(51,	7,	'IPFilterSecurityEnabled',	'Boolean',	''),
(52,	7,	'IPPortSecurityEnabled',	'Boolean',	''),
(53,	7,	'WINSEnableLMHostsLookup',	'Boolean',	''),
(54,	7,	'WINSHostLookupFile',	'String',	''),
(55,	7,	'WINSPrimaryServer',	'String',	''),
(56,	7,	'WINSScopeID',	'String',	''),
(57,	7,	'WINSSecondaryServer',	'String',	''),
(58,	6,	'DeviceID',	'String',	''),
(59,	6,	'Index',	'UInt32',	''),
(60,	6,	'Name',	'String',	''),
(61,	6,	'Caption',	'String',	''),
(62,	6,	'Description',	'String',	''),
(63,	6,	'Manufacturer',	'String',	''),
(64,	6,	'ProductName',	'String',	''),
(65,	6,	'MACAddress',	'String',	''),
(66,	6,	'Speed',	'UInt64',	''),
(67,	6,	'MaxSpeed',	'UInt64',	''),
(68,	6,	'NetConnectionStatus',	'UInt16',	''),
(69,	6,	'NetConnectionID',	'String',	''),
(70,	12,	'DeviceID',	'String',	''),
(71,	12,	'Name',	'String',	''),
(72,	12,	'Manufacturer',	'String',	''),
(73,	13,	'DeviceID',	'String',	''),
(74,	13,	'Description',	'String',	''),
(75,	13,	'AdapterRAM',	'UInt32',	''),
(76,	13,	'DriverDate',	'DateTime',	''),
(77,	13,	'VideoModeDescription',	'String',	''),
(78,	3,	'DeviceID',	'String',	''),
(79,	3,	'Name',	'String',	''),
(80,	3,	'MonitorManufacturer',	'String',	''),
(81,	3,	'PixelsPerXLogicalInch',	'UInt32',	''),
(82,	3,	'PixelsPerYLogicalInch',	'UInt32',	''),
(83,	3,	'ScreenHeight',	'UInt32',	''),
(84,	3,	'ScreenWidth',	'UInt32',	''),
(85,	2,	'Name',	'String',	''),
(86,	2,	'Manufacturer',	'String',	''),
(87,	2,	'Model',	'String',	''),
(88,	2,	'TotalPhysicalMemory',	'UInt64',	''),
(89,	10,	'DeviceID',	'String',	''),
(90,	10,	'Name',	'String',	''),
(91,	10,	'Local',	'Boolean',	''),
(92,	10,	'Network',	'Boolean',	''),
(93,	10,	'Location',	'String',	''),
(94,	10,	'Comment',	'String',	''),
(95,	10,	'DriverName',	'String',	''),
(96,	10,	'Shared',	'Boolean',	''),
(97,	10,	'ShareName',	'String',	''),
(103,	15,	'Caption',	'String',	''),
(104,	15,	'Name',	'String',	''),
(105,	15,	'DeviceLocator',	'String',	''),
(106,	15,	'Capacity',	'UInt32',	''),
(107,	15,	'Speed',	'UInt16',	''),
(108,	15,	'MemoryType',	'UInt16',	''),
(109,	15,	'Manufacturer',	'String',	''),
(110,	13,	'DriverVersion',	'String',	''),
(111,	11,	'NumberOfCores',	'UInt16',	''),
(112,	11,	'NumberOfLogicalProcessors',	'UInt16',	''),
(113,	16,	'Manufacturer',	'String',	''),
(114,	16,	'Product',	'String',	''),
(115,	16,	'Model',	'String',	''),
(116,	16,	'SerialNumber',	'String',	''),
(117,	8,	'OSArchitecture',	'String',	''),
(118,	7,	'IPEnabled',	'Boolean',	''),
(119,	17,	'DriverName',	'String',	''),
(120,	17,	'Manufacturer',	'String',	''),
(121,	17,	'Name',	'String',	''),
(122,	17,	'ProtocolSupported',	'UInt16',	''),
(123,	17,	'Status',	'String',	''),
(124,	17,	'StatusInfo',	'UInt16',	''),
(126,	18,	'DriverName',	'String',	''),
(127,	18,	'Manufacturer',	'String',	''),
(128,	18,	'Name',	'String',	''),
(129,	18,	'ProtocolSupported',	'UInt16',	''),
(130,	18,	'Status',	'String',	''),
(131,	18,	'StatusInfo',	'UInt16',	''),
(132,	19,	'Caption',	'String',	''),
(133,	19,	'Description',	'String',	''),
(134,	19,	'DeviceID',	'String',	''),
(135,	19,	'Manufacturer',	'String',	''),
(136,	19,	'Name',	'String',	''),
(137,	19,	'ProtocolSupported',	'UInt16',	''),
(138,	19,	'Status',	'String',	''),
(139,	19,	'StatusInfo',	'UInt16',	''),
(140,	19,	'PNPDeviceID',	'String',	''),
(141,	20,	'Caption',	'String',	''),
(142,	20,	'Description',	'String',	''),
(143,	20,	'DeviceID',	'String',	''),
(145,	20,	'Name',	'String',	''),
(146,	20,	'ProtocolCode',	'UInt16',	''),
(147,	20,	'Status',	'String',	''),
(148,	20,	'StatusInfo',	'UInt16',	''),
(149,	20,	'PNPDeviceID',	'String',	''),
(150,	21,	'Caption',	'String',	''),
(151,	21,	'Description',	'String',	''),
(152,	21,	'DeviceID',	'String',	''),
(153,	21,	'Manufacturer',	'String',	''),
(154,	21,	'Name',	'String',	''),
(155,	21,	'HardwareType',	'String',	'Type of hardware used for the Windows pointing device.'),
(156,	21,	'Status',	'String',	'Current status of the object. Various operational and nonoperational statuses can be defined. Operational statuses include: OK, Degraded, and Pred Fail (an element, such as a SMART-enabled hard disk drive, may be functioning properly but predicting a failure in the near future). Nonoperational statuses include: Error, Starting, Stopping, and Service. The latter, Service, could apply during mirror-resilvering of a disk, reload of a user permissions list, or other administrative work. Not all such work is online, yet the managed element is neither OK nor in one of the other states.'),
(157,	21,	'StatusInfo',	'UInt16',	''),
(158,	21,	'PNPDeviceID',	'String',	''),
(159,	21,	'PointingType',	'UInt16',	''),
(160,	21,	'NumberOfButtons',	'UInt16',	''),
(161,	21,	'QuadSpeedThreshold',	'String',	''),
(162,	21,	'Resolution',	'String',	''),
(163,	21,	'SampleRate',	'String',	''),
(164,	22,	'Caption',	'String',	''),
(165,	22,	'Description',	'String',	''),
(166,	22,	'DeviceID',	'String',	''),
(168,	22,	'Name',	'String',	''),
(170,	22,	'Status',	'String',	''),
(171,	22,	'StatusInfo',	'UInt16',	''),
(172,	22,	'PNPDeviceID',	'String',	''),
(173,	23,	'Caption',	'String',	''),
(174,	23,	'Description',	'String',	''),
(175,	23,	'DeviceID',	'String',	''),
(177,	23,	'Name',	'String',	''),
(179,	23,	'Status',	'String',	''),
(180,	23,	'StatusInfo',	'UInt16',	''),
(181,	23,	'PNPDeviceID',	'String',	''),
(182,	24,	'Caption',	'String',	''),
(183,	24,	'Description',	'String',	''),
(184,	24,	'DeviceID',	'String',	''),
(186,	24,	'Name',	'String',	''),
(188,	24,	'Status',	'String',	''),
(189,	24,	'StatusInfo',	'UInt16',	''),
(190,	24,	'PNPDeviceID',	'String',	''),
(191,	8,	'InstallDate',	'DateTime',	''),
(192,	2,	'Description',	'String',	''),
(193,	8,	'Description',	'String',	''),
(194,	25,	'UUID',	'String',	''),
(195,	6,	'GUID',	'String',	''),
(196,	2,	'PCSystemType',	'UInt16',	''),
(197,	4,	'PNPDeviceID',	'String',	''),
(198,	26,	'Antecedent',	'String',	''),
(199,	26,	'Dependent',	'String',	''),
(200,	27,	'Antecedent',	'String',	''),
(201,	27,	'Dependent',	'String',	''),
(202,	28,	'Name',	'String',	''),
(203,	28,	'MaxCapacity',	'UInt32',	''),
(204,	28,	'MemoryDevices',	'UInt16',	''),
(205,	15,	'BankLabel',	'String',	''),
(206,	11,	'Manufacturer',	'String',	''),
(207,	11,	'Description',	'String',	''),
(208,	29,	'Name',	'String',	''),
(209,	29,	'BatteryStatus',	'Uint16',	'Description of the battery s charge status. The value 10 (Undefined) is not valid in the Common Information Model (CIM) schema because in Desktop Management Interface (DMI) it indicates that no battery is installed. In this case, this object should not be instantiated.'),
(210,	29,	'Caption',	'String',	''),
(211,	29,	'DesignCapacity',	'Uint32',	'Design capacity of the battery in milliwatt-hours. If this property is not supported, enter 0 (zero).'),
(212,	29,	'DesignVoltage',	'Uint64',	'Design voltage of the battery in millivolts. If this attribute is not supported, enter 0 (zero).'),
(213,	29,	'ManufactureDate',	'String',	''),
(214,	29,	'Manufacturer',	'String',	''),
(215,	29,	'MaxBatteryError',	'Uint16',	'Difference between the highest estimated amount of energy left in the battery and the current amount reported by the battery.'),
(216,	29,	'TimeOnBattery',	'Uint32',	''),
(217,	29,	'TimeToFullCharge',	'Uint32',	''),
(218,	29,	'Location',	'String',	'Physical location of the battery. This property is filled by the computer manufacturer.'),
(219,	29,	'Status',	'String',	''),
(220,	30,	'Name',	'String',	'Defines the label by which the object is known. When subclassed, the property can be overridden to be a key property.'),
(221,	30,	'Caption',	'String',	'Short description of the object a one-line string.'),
(222,	30,	'Status',	'String',	'Current status of the object. Various operational and nonoperational statuses can be defined. Operational statuses include: OK, Degraded, and Pred Fail (an element, such as a SMART-enabled hard disk drive, may be functioning properly but predicting a failure in the near future). Nonoperational statuses include: Error, Starting, Stopping, and Service. The latter, Service, could apply during mirror-resilvering of a disk, reload of a user permissions list, or other administrative work. Not all such work is online, yet the managed element is neither OK nor in one of the other states.'),
(223,	30,	'DesignCapacity',	'Uint32',	'Design capacity of the battery in milliwatt-hours. If the property is not supported, enter 0 (zero).'),
(224,	30,	'DesignVoltage',	'Uint64',	'Design voltage of the battery in millivolts. If the attribute is not supported, enter 0 (zero).'),
(225,	30,	'EstimatedChargeRemaining',	'Uint16',	'Estimate of the percentage of full charge remaining.'),
(226,	30,	'EstimatedRunTime',	'Uint32',	'Estimate in minutes of the time to battery charge depletion under the present load conditions if the utility power is off, or lost and remains off, or a laptop is disconnected from a power source.'),
(227,	30,	'FullChargeCapacity',	'Uint32',	'Full charge capacity of the battery in milliwatt-hours. Comparison of the value to the DesignCapacity property determines when the battery requires replacement. A batterys end of life is typically when the FullChargeCapacity property falls below 80% of the DesignCapacity property. If the property is not supported, enter 0 (zero).'),
(228,	30,	'ErrorDescription',	'String',	'Free-form string that supplies more information about the error recorded in LastErrorCode property, and information about any corrective actions that may be taken.'),
(229,	2,	'AdminPasswordStatus',	'Uint16',	'System hardware security settings for administrator password status.'),
(230,	2,	'BootupState',	'String',	'System is started. Fail-safe boot bypasses the user startuo files also called SafeBoot.'),
(231,	2,	'ChassisBootupState',	'Uint16',	'This value comes from the Boot-up State member of the System Enclosure or Chassis structure in the SMBIOS information.'),
(801,	81,	'GroupComponent',	'String',	''),
(802,	81,	'PartComponent',	'String',	''),
(803,	80,	'Status',	'String',	''),
(804,	80,	'Caption',	'String',	''),
(805,	80,	'PasswordExpires',	'Boolean',	''),
(806,	80,	'Description',	'String',	''),
(807,	80,	'Disabled',	'Boolean',	''),
(808,	80,	'Domain',	'String',	''),
(809,	80,	'FullName',	'String',	''),
(810,	80,	'LocalAccount',	'Boolean',	''),
(811,	80,	'Lockout',	'Boolean',	''),
(812,	80,	'Name',	'String',	''),
(813,	80,	'PasswordChangeable',	'Boolean',	''),
(814,	80,	'PasswordRequired',	'Boolean',	''),
(815,	80,	'SID',	'String',	''),
(901,	90,	'Name',	'String',	''),
(902,	90,	'Version',	'String',	''),
(903,	90,	'Vendor',	'String',	''),
(904,	90,	'InstallDate',	'DateTime',	''),
(905,	90,	'IdentifyingNumber',	'String',	''),
(910,	91,	'Name',	'String',	''),
(911,	91,	'ApplicationId',	'String',	''),
(912,	91,	'LicenseStatus',	'UInt16',	''),
(913,	91,	'ProductKeyChannel',	'String',	''),
(920,	92,	'InstanceName',	'String',	''),
(921,	92,	'PredictFailure',	'Boolean',	''),
(922,	92,	'Reason',	'UInt32',	''),
(930,	93,	'Description',	'String',	'A textual description of the object.'),
(931,	93,	'HotFixID',	'String',	'Indicates when the object was installed. Lack of a value does not indicate that the object is not installed.'),
(932,	93,	'InstalledOn',	'DateTime',	'This property may use different formats, depending on when the QuickFix was installed. Most systems use a standard date format, such as \"23-10-2013\". However, some systems may return a 64-bit hexidecimal value in the Win32 FILETIME format.'),
(933,	93,	'Status',	'String',	'String that indicates the current status of the object. Operational and non-operational status can be defined. Operational status can include \"OK\", \"Degraded\", and \"Pred Fail\". \"Pred Fail\" indicates that an element is functioning properly, but is predicting a failure (for example, a SMART-enabled hard disk drive).'),
(940,	94,	'Name',	'String',	''),
(941,	94,	'DeviceID',	'String',	''),
(942,	94,	'ConfigManagerErrorCode',	'UInt32',	'Win32 Configuration Manager error code.');


DROP TABLE IF EXISTS `vwComputerInventory`;
CREATE ALGORITHM=UNDEFINED SQL SECURITY DEFINER VIEW `vwComputerInventory` AS select `tbComputerTarget`.`Name` AS `Name`,`tbInventoryClass`.`Name` AS `ClassName`,`tbInventoryProperty`.`Name` AS `PropertyName`,`tbComputerInventory`.`Value` AS `Value`,`tbComputerInventory`.`InstanceId` AS `InstanceId` from (((`tbComputerInventory` join `tbInventoryClass` on((`tbComputerInventory`.`ClassID` = `tbInventoryClass`.`ClassID`))) join `tbInventoryProperty` on((`tbComputerInventory`.`PropertyID` = `tbInventoryProperty`.`PropertyID`))) join `tbComputerTarget` on((`tbComputerInventory`.`ComputerTargetId` = `tbComputerTarget`.`ComputerTargetId`))) order by `tbComputerTarget`.`Name`;

DROP TABLE IF EXISTS `vwComputerSoftInventory`;
CREATE ALGORITHM=UNDEFINED SQL SECURITY DEFINER VIEW `vwComputerSoftInventory` AS select `tbComputerTarget`.`Name` AS `Name`,`tbInventoryProperty`.`Name` AS `PropertyName`,`tbComputerSoftInventory`.`Value` AS `Value`,`tbComputerSoftInventory`.`InstanceId` AS `InstanceId` from ((`tbComputerSoftInventory` join `tbInventoryProperty` on((`tbComputerSoftInventory`.`PropertyID` = `tbInventoryProperty`.`PropertyID`))) join `tbComputerTarget` on((`tbComputerSoftInventory`.`ComputerTargetId` = `tbComputerTarget`.`ComputerTargetId`))) order by `tbComputerTarget`.`Name`;

DROP TABLE IF EXISTS `vwComputerUpdatesInventory`;
CREATE ALGORITHM=UNDEFINED SQL SECURITY DEFINER VIEW `vwComputerUpdatesInventory` AS select `tbComputerTarget`.`Name` AS `Name`,`tbInventoryProperty`.`Name` AS `PropertyName`,`tbComputerUpdatesInventory`.`Value` AS `Value`,`tbComputerUpdatesInventory`.`InstanceId` AS `InstanceId` from ((`tbComputerUpdatesInventory` join `tbInventoryProperty` on((`tbComputerUpdatesInventory`.`PropertyID` = `tbInventoryProperty`.`PropertyID`))) join `tbComputerTarget` on((`tbComputerUpdatesInventory`.`ComputerTargetId` = `tbComputerTarget`.`ComputerTargetId`))) order by `tbComputerTarget`.`Name`;

-- 2019-11-28 15:20:18
